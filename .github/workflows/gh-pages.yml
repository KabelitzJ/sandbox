# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3
      # Generate docs
      - name: Generate docs
        uses: mattnotmitt/doxygen-action@v1.9.5
        with:
          working-directory: './'
          doxyfile-path: './docs/Doxyfile'
      # Copy images
      - name: Copy images
        run: |
          sudo mkdir -p './docs/html/images'
          sudo cp -r './images' './docs/html/images'
      # Setup Doxygen Awesome
      - name: Setup Doxygen Awesome
        run: |
          sudo git submodule add https://github.com/jothepro/doxygen-awesome-css.git
          cd doxygen-awesome-css
          sudo git checkout v2.2.1
          sudo make install
      # Copy Doxygen Awesome
      - name: Publish generated content to GitHub Pages
        uses: tsunematsu21/actions-publish-gh-pages@v1.0.2
        with:
          dir: docs/html
          branch: gh-pages
          token: ${{ secrets.ACCESS_TOKEN }}
